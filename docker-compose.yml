version: '3.8'

services:
  db:
    image: ankane/pgvector:v0.5.1
    container_name: mis-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mis
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7-alpine
    container_name: mis-cache
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mis-api
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_URL=postgresql://postgres:postgres@db:5432/mis
      - REDIS_URL=redis://cache:6379/0
    volumes:
      - .:/app
      - embeddings_cache:/root/.cache/torch
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mis-worker
    command: rq worker --url redis://cache:6379/0 mis-queue
    env_file:
      - .env
    environment:
      - DB_URL=postgresql://postgres:postgres@db:5432/mis
      - REDIS_URL=redis://cache:6379/0
    volumes:
      - .:/app
      - embeddings_cache:/root/.cache/torch
    depends_on:
      - db
      - cache

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mis-app
    command: streamlit run src/app/ui.py --server.port 8501 --server.address 0.0.0.0
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      - API_URL=http://api:8000
    volumes:
      - .:/app
    depends_on:
      - api

volumes:
  pgdata:
  embeddings_cache:
